// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(clippy::unnecessary_wraps)]
pub fn de_delete_object_http_error(_response_status: u16, _response_headers: &::aws_smithy_runtime_api::http::Headers, _response_body: &[u8]) -> std::result::Result<crate::operation::delete_object::DeleteObjectOutput, crate::operation::delete_object::DeleteObjectError> {
    #[allow(unused_mut)]
    let mut generic_builder = crate::protocol_serde::parse_http_error_metadata(_response_status, _response_headers, _response_body).map_err(crate::operation::delete_object::DeleteObjectError::unhandled)?;
    let generic = generic_builder.build();
    Err(crate::operation::delete_object::DeleteObjectError::generic(generic))
}

#[allow(clippy::unnecessary_wraps)]
pub fn de_delete_object_http_response(_response_status: u16, _response_headers: &::aws_smithy_runtime_api::http::Headers, _response_body: &[u8]) -> std::result::Result<crate::operation::delete_object::DeleteObjectOutput, crate::operation::delete_object::DeleteObjectError> {
    Ok({
        #[allow(unused_mut)]
        let mut output = crate::operation::delete_object::builders::DeleteObjectOutputBuilder::default();
        output = output.set_x_amz_version_id(
            crate::protocol_serde::shape_delete_object_output::de_x_amz_version_id_header(_response_headers)
                                    .map_err(|_|crate::operation::delete_object::DeleteObjectError::unhandled("Failed to parse XAmzVersionId from header `x-amz-version-id"))?
        );
        output.build()
    })
}

