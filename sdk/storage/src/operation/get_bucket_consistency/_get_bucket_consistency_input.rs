// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetBucketConsistencyInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub bucket: ::std::option::Option<::std::string::String>,
}
impl  GetBucketConsistencyInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn bucket(&self) -> ::std::option::Option<& str> {
        self.bucket.as_deref()
    }
}
impl GetBucketConsistencyInput {
    /// Creates a new builder-style object to manufacture [`GetBucketConsistencyInput`](crate::operation::get_bucket_consistency::GetBucketConsistencyInput).
    pub fn builder() -> crate::operation::get_bucket_consistency::builders::GetBucketConsistencyInputBuilder {
        crate::operation::get_bucket_consistency::builders::GetBucketConsistencyInputBuilder::default()
    }
}

/// A builder for [`GetBucketConsistencyInput`](crate::operation::get_bucket_consistency::GetBucketConsistencyInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetBucketConsistencyInputBuilder {
    pub(crate) bucket: ::std::option::Option<::std::string::String>,
}
impl GetBucketConsistencyInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn bucket(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bucket = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_bucket(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bucket = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_bucket(&self) -> &::std::option::Option<::std::string::String> {
        &self.bucket
    }
    /// Consumes the builder and constructs a [`GetBucketConsistencyInput`](crate::operation::get_bucket_consistency::GetBucketConsistencyInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::get_bucket_consistency::GetBucketConsistencyInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::get_bucket_consistency::GetBucketConsistencyInput {
                bucket: self.bucket
                ,
            }
        )
    }
}

