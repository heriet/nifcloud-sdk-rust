// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutBucketOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub location: ::std::option::Option<::std::string::String>,
}
impl  PutBucketOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn location(&self) -> ::std::option::Option<& str> {
        self.location.as_deref()
    }
}
impl PutBucketOutput {
    /// Creates a new builder-style object to manufacture [`PutBucketOutput`](crate::operation::put_bucket::PutBucketOutput).
    pub fn builder() -> crate::operation::put_bucket::builders::PutBucketOutputBuilder {
        crate::operation::put_bucket::builders::PutBucketOutputBuilder::default()
    }
}

/// A builder for [`PutBucketOutput`](crate::operation::put_bucket::PutBucketOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutBucketOutputBuilder {
    pub(crate) location: ::std::option::Option<::std::string::String>,
}
impl PutBucketOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn location(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.location = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_location(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.location = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_location(&self) -> &::std::option::Option<::std::string::String> {
        &self.location
    }
    /// Consumes the builder and constructs a [`PutBucketOutput`](crate::operation::put_bucket::PutBucketOutput).
    pub fn build(self) -> crate::operation::put_bucket::PutBucketOutput {
        crate::operation::put_bucket::PutBucketOutput {
            location: self.location
            ,
        }
    }
}

