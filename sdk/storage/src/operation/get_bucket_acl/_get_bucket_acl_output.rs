// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetBucketAclOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub access_control_list: ::std::option::Option<::std::vec::Vec::<crate::types::AccessControlListOfGetBucketAcl>>,
    #[allow(missing_docs)] // documentation missing in model
    pub content_type: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub owner: ::std::option::Option<crate::types::Owner>,
}
impl  GetBucketAclOutput  {
    #[allow(missing_docs)] // documentation missing in model
    /// 
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.access_control_list.is_none()`.
    pub fn access_control_list(&self) -> & [crate::types::AccessControlListOfGetBucketAcl] {
        self.access_control_list.as_deref()
        .unwrap_or_default()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn content_type(&self) -> ::std::option::Option<& str> {
        self.content_type.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn owner(&self) -> ::std::option::Option<& crate::types::Owner> {
        self.owner.as_ref()
    }
}
impl GetBucketAclOutput {
    /// Creates a new builder-style object to manufacture [`GetBucketAclOutput`](crate::operation::get_bucket_acl::GetBucketAclOutput).
    pub fn builder() -> crate::operation::get_bucket_acl::builders::GetBucketAclOutputBuilder {
        crate::operation::get_bucket_acl::builders::GetBucketAclOutputBuilder::default()
    }
}

/// A builder for [`GetBucketAclOutput`](crate::operation::get_bucket_acl::GetBucketAclOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetBucketAclOutputBuilder {
    pub(crate) access_control_list: ::std::option::Option<::std::vec::Vec::<crate::types::AccessControlListOfGetBucketAcl>>,
    pub(crate) content_type: ::std::option::Option<::std::string::String>,
    pub(crate) owner: ::std::option::Option<crate::types::Owner>,
}
impl GetBucketAclOutputBuilder {
    /// Appends an item to `access_control_list`.
    ///
    /// To override the contents of this collection use [`set_access_control_list`](Self::set_access_control_list).
    ///
    pub fn access_control_list(mut self, input: crate::types::AccessControlListOfGetBucketAcl) -> Self {
        let mut v = self.access_control_list.unwrap_or_default();
                        v.push(input);
                        self.access_control_list = ::std::option::Option::Some(v);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_access_control_list(mut self, input: ::std::option::Option<::std::vec::Vec::<crate::types::AccessControlListOfGetBucketAcl>>) -> Self {
        self.access_control_list = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_access_control_list(&self) -> &::std::option::Option<::std::vec::Vec::<crate::types::AccessControlListOfGetBucketAcl>> {
        &self.access_control_list
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn content_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.content_type = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_content_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.content_type = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_content_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.content_type
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn owner(mut self, input: crate::types::Owner) -> Self {
        self.owner = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_owner(mut self, input: ::std::option::Option<crate::types::Owner>) -> Self {
        self.owner = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_owner(&self) -> &::std::option::Option<crate::types::Owner> {
        &self.owner
    }
    /// Consumes the builder and constructs a [`GetBucketAclOutput`](crate::operation::get_bucket_acl::GetBucketAclOutput).
    pub fn build(self) -> crate::operation::get_bucket_acl::GetBucketAclOutput {
        crate::operation::get_bucket_acl::GetBucketAclOutput {
            access_control_list: self.access_control_list
            ,
            content_type: self.content_type
            ,
            owner: self.owner
            ,
        }
    }
}

