// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PutBucketConsistencyInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub bucket: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub x_ntap_sg_consistency: ::std::option::Option<crate::types::XNtapSgConsistencyOfPutBucketConsistencyRequest>,
}
impl  PutBucketConsistencyInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn bucket(&self) -> ::std::option::Option<& str> {
        self.bucket.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn x_ntap_sg_consistency(&self) -> ::std::option::Option<& crate::types::XNtapSgConsistencyOfPutBucketConsistencyRequest> {
        self.x_ntap_sg_consistency.as_ref()
    }
}
impl PutBucketConsistencyInput {
    /// Creates a new builder-style object to manufacture [`PutBucketConsistencyInput`](crate::operation::put_bucket_consistency::PutBucketConsistencyInput).
    pub fn builder() -> crate::operation::put_bucket_consistency::builders::PutBucketConsistencyInputBuilder {
        crate::operation::put_bucket_consistency::builders::PutBucketConsistencyInputBuilder::default()
    }
}

/// A builder for [`PutBucketConsistencyInput`](crate::operation::put_bucket_consistency::PutBucketConsistencyInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PutBucketConsistencyInputBuilder {
    pub(crate) bucket: ::std::option::Option<::std::string::String>,
    pub(crate) x_ntap_sg_consistency: ::std::option::Option<crate::types::XNtapSgConsistencyOfPutBucketConsistencyRequest>,
}
impl PutBucketConsistencyInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn bucket(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bucket = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_bucket(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bucket = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_bucket(&self) -> &::std::option::Option<::std::string::String> {
        &self.bucket
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn x_ntap_sg_consistency(mut self, input: crate::types::XNtapSgConsistencyOfPutBucketConsistencyRequest) -> Self {
        self.x_ntap_sg_consistency = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_x_ntap_sg_consistency(mut self, input: ::std::option::Option<crate::types::XNtapSgConsistencyOfPutBucketConsistencyRequest>) -> Self {
        self.x_ntap_sg_consistency = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_x_ntap_sg_consistency(&self) -> &::std::option::Option<crate::types::XNtapSgConsistencyOfPutBucketConsistencyRequest> {
        &self.x_ntap_sg_consistency
    }
    /// Consumes the builder and constructs a [`PutBucketConsistencyInput`](crate::operation::put_bucket_consistency::PutBucketConsistencyInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::put_bucket_consistency::PutBucketConsistencyInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::put_bucket_consistency::PutBucketConsistencyInput {
                bucket: self.bucket
                ,
                x_ntap_sg_consistency: self.x_ntap_sg_consistency
                ,
            }
        )
    }
}

