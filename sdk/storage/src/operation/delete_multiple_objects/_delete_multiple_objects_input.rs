// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeleteMultipleObjectsInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub bucket: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub content_md5: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub delete: ::std::option::Option<crate::types::RequestDelete>,
}
impl  DeleteMultipleObjectsInput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn bucket(&self) -> ::std::option::Option<& str> {
        self.bucket.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn content_md5(&self) -> ::std::option::Option<& str> {
        self.content_md5.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn delete(&self) -> ::std::option::Option<& crate::types::RequestDelete> {
        self.delete.as_ref()
    }
}
impl DeleteMultipleObjectsInput {
    /// Creates a new builder-style object to manufacture [`DeleteMultipleObjectsInput`](crate::operation::delete_multiple_objects::DeleteMultipleObjectsInput).
    pub fn builder() -> crate::operation::delete_multiple_objects::builders::DeleteMultipleObjectsInputBuilder {
        crate::operation::delete_multiple_objects::builders::DeleteMultipleObjectsInputBuilder::default()
    }
}

/// A builder for [`DeleteMultipleObjectsInput`](crate::operation::delete_multiple_objects::DeleteMultipleObjectsInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeleteMultipleObjectsInputBuilder {
    pub(crate) bucket: ::std::option::Option<::std::string::String>,
    pub(crate) content_md5: ::std::option::Option<::std::string::String>,
    pub(crate) delete: ::std::option::Option<crate::types::RequestDelete>,
}
impl DeleteMultipleObjectsInputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn bucket(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.bucket = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_bucket(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.bucket = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_bucket(&self) -> &::std::option::Option<::std::string::String> {
        &self.bucket
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn content_md5(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.content_md5 = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_content_md5(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.content_md5 = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_content_md5(&self) -> &::std::option::Option<::std::string::String> {
        &self.content_md5
    }
    #[allow(missing_docs)] // documentation missing in model
    /// This field is required.
    pub fn delete(mut self, input: crate::types::RequestDelete) -> Self {
        self.delete = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_delete(mut self, input: ::std::option::Option<crate::types::RequestDelete>) -> Self {
        self.delete = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_delete(&self) -> &::std::option::Option<crate::types::RequestDelete> {
        &self.delete
    }
    /// Consumes the builder and constructs a [`DeleteMultipleObjectsInput`](crate::operation::delete_multiple_objects::DeleteMultipleObjectsInput).
    pub fn build(self) -> ::std::result::Result<crate::operation::delete_multiple_objects::DeleteMultipleObjectsInput, ::aws_smithy_types::error::operation::BuildError> {
        ::std::result::Result::Ok(
            crate::operation::delete_multiple_objects::DeleteMultipleObjectsInput {
                bucket: self.bucket
                ,
                content_md5: self.content_md5
                ,
                delete: self.delete
                ,
            }
        )
    }
}

