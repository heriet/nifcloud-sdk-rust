// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetObjectTaggingOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub content_type: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub tag_set: ::std::option::Option<crate::types::TagSet>,
    #[allow(missing_docs)] // documentation missing in model
    pub x_amz_version_id: ::std::option::Option<::std::string::String>,
}
impl  GetObjectTaggingOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn content_type(&self) -> ::std::option::Option<& str> {
        self.content_type.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn tag_set(&self) -> ::std::option::Option<& crate::types::TagSet> {
        self.tag_set.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn x_amz_version_id(&self) -> ::std::option::Option<& str> {
        self.x_amz_version_id.as_deref()
    }
}
impl GetObjectTaggingOutput {
    /// Creates a new builder-style object to manufacture [`GetObjectTaggingOutput`](crate::operation::get_object_tagging::GetObjectTaggingOutput).
    pub fn builder() -> crate::operation::get_object_tagging::builders::GetObjectTaggingOutputBuilder {
        crate::operation::get_object_tagging::builders::GetObjectTaggingOutputBuilder::default()
    }
}

/// A builder for [`GetObjectTaggingOutput`](crate::operation::get_object_tagging::GetObjectTaggingOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetObjectTaggingOutputBuilder {
    pub(crate) content_type: ::std::option::Option<::std::string::String>,
    pub(crate) tag_set: ::std::option::Option<crate::types::TagSet>,
    pub(crate) x_amz_version_id: ::std::option::Option<::std::string::String>,
}
impl GetObjectTaggingOutputBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn content_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.content_type = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_content_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.content_type = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_content_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.content_type
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn tag_set(mut self, input: crate::types::TagSet) -> Self {
        self.tag_set = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_tag_set(mut self, input: ::std::option::Option<crate::types::TagSet>) -> Self {
        self.tag_set = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_tag_set(&self) -> &::std::option::Option<crate::types::TagSet> {
        &self.tag_set
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn x_amz_version_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.x_amz_version_id = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_x_amz_version_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.x_amz_version_id = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_x_amz_version_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.x_amz_version_id
    }
    /// Consumes the builder and constructs a [`GetObjectTaggingOutput`](crate::operation::get_object_tagging::GetObjectTaggingOutput).
    pub fn build(self) -> crate::operation::get_object_tagging::GetObjectTaggingOutput {
        crate::operation::get_object_tagging::GetObjectTaggingOutput {
            content_type: self.content_type
            ,
            tag_set: self.tag_set
            ,
            x_amz_version_id: self.x_amz_version_id
            ,
        }
    }
}

