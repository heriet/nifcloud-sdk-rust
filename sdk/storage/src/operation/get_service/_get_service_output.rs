// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetServiceOutput  {
    #[allow(missing_docs)] // documentation missing in model
    pub buckets: ::std::option::Option<::std::vec::Vec::<crate::types::Buckets>>,
    #[allow(missing_docs)] // documentation missing in model
    pub owner: ::std::option::Option<crate::types::Owner>,
}
impl  GetServiceOutput  {
    #[allow(missing_docs)] // documentation missing in model
    /// 
    /// If no value was sent for this field, a default will be set. If you want to determine if no value was sent, use `.buckets.is_none()`.
    pub fn buckets(&self) -> & [crate::types::Buckets] {
        self.buckets.as_deref()
        .unwrap_or_default()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn owner(&self) -> ::std::option::Option<& crate::types::Owner> {
        self.owner.as_ref()
    }
}
impl GetServiceOutput {
    /// Creates a new builder-style object to manufacture [`GetServiceOutput`](crate::operation::get_service::GetServiceOutput).
    pub fn builder() -> crate::operation::get_service::builders::GetServiceOutputBuilder {
        crate::operation::get_service::builders::GetServiceOutputBuilder::default()
    }
}

/// A builder for [`GetServiceOutput`](crate::operation::get_service::GetServiceOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetServiceOutputBuilder {
    pub(crate) buckets: ::std::option::Option<::std::vec::Vec::<crate::types::Buckets>>,
    pub(crate) owner: ::std::option::Option<crate::types::Owner>,
}
impl GetServiceOutputBuilder {
    /// Appends an item to `buckets`.
    ///
    /// To override the contents of this collection use [`set_buckets`](Self::set_buckets).
    ///
    pub fn buckets(mut self, input: crate::types::Buckets) -> Self {
        let mut v = self.buckets.unwrap_or_default();
                        v.push(input);
                        self.buckets = ::std::option::Option::Some(v);
                        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_buckets(mut self, input: ::std::option::Option<::std::vec::Vec::<crate::types::Buckets>>) -> Self {
        self.buckets = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_buckets(&self) -> &::std::option::Option<::std::vec::Vec::<crate::types::Buckets>> {
        &self.buckets
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn owner(mut self, input: crate::types::Owner) -> Self {
        self.owner = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_owner(mut self, input: ::std::option::Option<crate::types::Owner>) -> Self {
        self.owner = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_owner(&self) -> &::std::option::Option<crate::types::Owner> {
        &self.owner
    }
    /// Consumes the builder and constructs a [`GetServiceOutput`](crate::operation::get_service::GetServiceOutput).
    pub fn build(self) -> crate::operation::get_service::GetServiceOutput {
        crate::operation::get_service::GetServiceOutput {
            buckets: self.buckets
            ,
            owner: self.owner
            ,
        }
    }
}

