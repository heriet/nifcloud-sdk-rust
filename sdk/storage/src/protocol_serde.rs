// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(result: ::std::result::Result<O, E>) -> ::std::result::Result<::aws_smithy_runtime_api::client::interceptors::context::Output, ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>>
            where
                O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
                E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
            {
                result.map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
                    .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
                    .map_err(::std::convert::Into::into)
            }

pub fn parse_http_error_metadata(_response_status: u16, _response_headers: &::aws_smithy_runtime_api::http::Headers, response_body: &[u8]) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_xml::decode::XmlDecodeError> {
    crate::rest_xml_wrapped_errors::parse_error_metadata(response_body)
}

pub(crate) mod shape_abort_multipart_upload;

pub(crate) mod shape_complete_multipart_upload;

pub fn rest_xml_unset_struct_payload() -> ::std::vec::Vec<u8> {
                    Vec::new()
                }

pub(crate) mod shape_complete_multipart_upload_input;

pub(crate) mod shape_delete_bucket;

pub(crate) mod shape_delete_bucket_cors;

pub(crate) mod shape_delete_bucket_lifecycle;

pub(crate) mod shape_delete_bucket_policy;

pub(crate) mod shape_delete_bucket_tagging;

pub(crate) mod shape_delete_multiple_objects;

pub(crate) mod shape_delete_multiple_objects_input;

pub(crate) mod shape_delete_object;

pub(crate) mod shape_delete_object_tagging;

pub(crate) mod shape_get_bucket;

pub(crate) mod shape_get_bucket_acl;

pub(crate) mod shape_get_bucket_consistency;

pub(crate) mod shape_get_bucket_cors;

pub(crate) mod shape_get_bucket_lifecycle_configuration;

pub(crate) mod shape_get_bucket_object_versions;

pub(crate) mod shape_get_bucket_policy;

pub(crate) mod shape_get_bucket_tagging;

pub(crate) mod shape_get_bucket_version2;

pub(crate) mod shape_get_bucket_versioning;

pub(crate) mod shape_get_object;

pub(crate) mod shape_get_object_acl;

pub(crate) mod shape_get_object_tagging;

pub(crate) mod shape_get_service;

pub(crate) mod shape_head_bucket;

pub(crate) mod shape_head_object;

pub(crate) mod shape_initiate_multipart_upload;

pub(crate) mod shape_list_multipart_uploads;

pub(crate) mod shape_list_parts;

pub(crate) mod shape_put_bucket;

pub(crate) mod shape_put_bucket_consistency;

pub(crate) mod shape_put_bucket_cors;

pub(crate) mod shape_put_bucket_cors_input;

pub(crate) mod shape_put_bucket_lifecycle_configuration;

pub(crate) mod shape_put_bucket_lifecycle_configuration_input;

pub(crate) mod shape_put_bucket_policy;

pub(crate) mod shape_put_bucket_policy_input;

pub(crate) mod shape_put_bucket_tagging;

pub(crate) mod shape_put_bucket_tagging_input;

pub(crate) mod shape_put_bucket_versioning;

pub(crate) mod shape_put_bucket_versioning_input;

pub(crate) mod shape_put_object;

pub(crate) mod shape_put_object_copy;

pub(crate) mod shape_put_object_input;

pub(crate) mod shape_put_object_tagging;

pub(crate) mod shape_put_object_tagging_input;

pub(crate) mod shape_upload_part;

pub(crate) mod shape_upload_part_copy;

pub(crate) mod shape_upload_part_input;

pub(crate) mod shape_complete_multipart_upload_output;

pub(crate) mod shape_delete_multiple_objects_output;

pub(crate) mod shape_delete_object_output;

pub(crate) mod shape_delete_object_tagging_output;

pub(crate) mod shape_get_bucket_acl_output;

pub(crate) mod shape_get_bucket_consistency_output;

pub(crate) mod shape_get_bucket_cors_output;

pub(crate) mod shape_get_bucket_object_versions_output;

pub(crate) mod shape_get_bucket_output;

pub(crate) mod shape_get_bucket_policy_output;

pub(crate) mod shape_get_bucket_tagging_output;

pub(crate) mod shape_get_bucket_version2_output;

pub(crate) mod shape_get_bucket_versioning_output;

pub(crate) mod shape_get_object_acl_output;

pub(crate) mod shape_get_object_output;

pub(crate) mod shape_get_object_tagging_output;

pub(crate) mod shape_head_object_output;

pub(crate) mod shape_initiate_multipart_upload_output;

pub(crate) mod shape_list_multipart_uploads_output;

pub(crate) mod shape_list_parts_output;

pub(crate) mod shape_put_bucket_consistency_output;

pub(crate) mod shape_put_bucket_output;

pub(crate) mod shape_put_object_copy_output;

pub(crate) mod shape_put_object_output;

pub(crate) mod shape_put_object_tagging_output;

pub(crate) mod shape_upload_part_copy_output;

pub(crate) mod shape_upload_part_output;

pub(crate) mod shape_access_control_list;

pub(crate) mod shape_contents;

pub(crate) mod shape_cors_rule;

pub(crate) mod shape_deleted;

pub(crate) mod shape_initiator;

pub(crate) mod shape_list_of_access_control_list_of_get_bucket_acl;

pub(crate) mod shape_list_of_buckets;

pub(crate) mod shape_list_of_tag_set_of_get_bucket_tagging;

pub(crate) mod shape_owner;

pub(crate) mod shape_part;

pub(crate) mod shape_request_complete_multipart_upload;

pub(crate) mod shape_request_cors_configuration;

pub(crate) mod shape_request_delete;

pub(crate) mod shape_request_lifecycle_configuration;

pub(crate) mod shape_request_tagging;

pub(crate) mod shape_request_tagging_of_put_bucket_tagging;

pub(crate) mod shape_request_versioning_configuration;

pub(crate) mod shape_rule;

pub(crate) mod shape_tag_set;

pub(crate) mod shape_upload;

pub(crate) mod shape_version;

pub(crate) mod shape_access_control_list_of_get_bucket_acl;

pub(crate) mod shape_buckets;

pub(crate) mod shape_expiration;

pub(crate) mod shape_filter;

pub(crate) mod shape_grant;

pub(crate) mod shape_list_of_allowed_method;

pub(crate) mod shape_noncurrent_version_expiration;

pub(crate) mod shape_request_cors_rule;

pub(crate) mod shape_request_object;

pub(crate) mod shape_request_part;

pub(crate) mod shape_request_rule;

pub(crate) mod shape_request_tag_set;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_set_of_get_bucket_tagging;

pub(crate) mod shape_and;

pub(crate) mod shape_grantee;

pub(crate) mod shape_request_expiration;

pub(crate) mod shape_request_filter;

pub(crate) mod shape_request_noncurrent_version_expiration;

pub(crate) mod shape_request_tag;

pub(crate) mod shape_request_and;

