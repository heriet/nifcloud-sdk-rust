// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Part  {
    #[allow(missing_docs)] // documentation missing in model
    pub e_tag: ::std::option::Option<::std::string::String>,
    #[allow(missing_docs)] // documentation missing in model
    pub last_modified: ::std::option::Option<::aws_smithy_types::DateTime>,
    #[allow(missing_docs)] // documentation missing in model
    pub part_number: ::std::option::Option<i32>,
    #[allow(missing_docs)] // documentation missing in model
    pub size: ::std::option::Option<i32>,
}
impl  Part  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn e_tag(&self) -> ::std::option::Option<& str> {
        self.e_tag.as_deref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn last_modified(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.last_modified.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn part_number(&self) -> ::std::option::Option<i32> {
        self.part_number
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn size(&self) -> ::std::option::Option<i32> {
        self.size
    }
}
impl Part {
    /// Creates a new builder-style object to manufacture [`Part`](crate::types::Part).
    pub fn builder() -> crate::types::builders::PartBuilder {
        crate::types::builders::PartBuilder::default()
    }
}

/// A builder for [`Part`](crate::types::Part).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PartBuilder {
    pub(crate) e_tag: ::std::option::Option<::std::string::String>,
    pub(crate) last_modified: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) part_number: ::std::option::Option<i32>,
    pub(crate) size: ::std::option::Option<i32>,
}
impl PartBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn e_tag(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.e_tag = ::std::option::Option::Some(input.into());
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_e_tag(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.e_tag = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_e_tag(&self) -> &::std::option::Option<::std::string::String> {
        &self.e_tag
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn last_modified(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_last_modified(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_last_modified(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn part_number(mut self, input: i32) -> Self {
        self.part_number = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_part_number(mut self, input: ::std::option::Option<i32>) -> Self {
        self.part_number = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_part_number(&self) -> &::std::option::Option<i32> {
        &self.part_number
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn size(mut self, input: i32) -> Self {
        self.size = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_size(mut self, input: ::std::option::Option<i32>) -> Self {
        self.size = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_size(&self) -> &::std::option::Option<i32> {
        &self.size
    }
    /// Consumes the builder and constructs a [`Part`](crate::types::Part).
    pub fn build(self) -> crate::types::Part {
        crate::types::Part {
            e_tag: self.e_tag
            ,
            last_modified: self.last_modified
            ,
            part_number: self.part_number
            ,
            size: self.size
            ,
        }
    }
}

