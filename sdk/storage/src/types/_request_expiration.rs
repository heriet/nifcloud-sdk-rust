// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RequestExpiration  {
    #[allow(missing_docs)] // documentation missing in model
    pub date: ::std::option::Option<::aws_smithy_types::DateTime>,
    #[allow(missing_docs)] // documentation missing in model
    pub days: ::std::option::Option<i32>,
}
impl  RequestExpiration  {
    #[allow(missing_docs)] // documentation missing in model
    pub fn date(&self) -> ::std::option::Option<& ::aws_smithy_types::DateTime> {
        self.date.as_ref()
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn days(&self) -> ::std::option::Option<i32> {
        self.days
    }
}
impl RequestExpiration {
    /// Creates a new builder-style object to manufacture [`RequestExpiration`](crate::types::RequestExpiration).
    pub fn builder() -> crate::types::builders::RequestExpirationBuilder {
        crate::types::builders::RequestExpirationBuilder::default()
    }
}

/// A builder for [`RequestExpiration`](crate::types::RequestExpiration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RequestExpirationBuilder {
    pub(crate) date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) days: ::std::option::Option<i32>,
}
impl RequestExpirationBuilder {
    #[allow(missing_docs)] // documentation missing in model
    pub fn date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.date = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.date = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.date
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn days(mut self, input: i32) -> Self {
        self.days = ::std::option::Option::Some(input);
        self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn set_days(mut self, input: ::std::option::Option<i32>) -> Self {
        self.days = input; self
    }
    #[allow(missing_docs)] // documentation missing in model
    pub fn get_days(&self) -> &::std::option::Option<i32> {
        &self.days
    }
    /// Consumes the builder and constructs a [`RequestExpiration`](crate::types::RequestExpiration).
    pub fn build(self) -> crate::types::RequestExpiration {
        crate::types::RequestExpiration {
            date: self.date
            ,
            days: self.days
            ,
        }
    }
}

