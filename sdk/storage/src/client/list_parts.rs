// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`ListParts`](crate::operation::list_parts::builders::ListPartsFluentBuilder) operation.
                            ///
                            /// - The fluent builder is configurable:
    ///   - [`bucket(impl Into<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::bucket) / [`set_bucket(Option<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::set_bucket):<br>required: **true**<br>(undocumented)<br>
    ///   - [`encoding_type(impl Into<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::encoding_type) / [`set_encoding_type(Option<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::set_encoding_type):<br>required: **false**<br>(undocumented)<br>
    ///   - [`max_parts(impl Into<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::max_parts) / [`set_max_parts(Option<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::set_max_parts):<br>required: **false**<br>(undocumented)<br>
    ///   - [`object(impl Into<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::object) / [`set_object(Option<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::set_object):<br>required: **true**<br>(undocumented)<br>
    ///   - [`part_number_marker(impl Into<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::part_number_marker) / [`set_part_number_marker(Option<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::set_part_number_marker):<br>required: **false**<br>(undocumented)<br>
    ///   - [`upload_id(impl Into<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::upload_id) / [`set_upload_id(Option<String>)`](crate::operation::list_parts::builders::ListPartsFluentBuilder::set_upload_id):<br>required: **true**<br>(undocumented)<br>
                            /// - On success, responds with [`ListPartsOutput`](crate::operation::list_parts::ListPartsOutput) with field(s):
    ///   - [`bucket(Option<String>)`](crate::operation::list_parts::ListPartsOutput::bucket): (undocumented)
    ///   - [`content_type(Option<String>)`](crate::operation::list_parts::ListPartsOutput::content_type): (undocumented)
    ///   - [`encoding_type(Option<String>)`](crate::operation::list_parts::ListPartsOutput::encoding_type): (undocumented)
    ///   - [`initiator(Option<Initiator>)`](crate::operation::list_parts::ListPartsOutput::initiator): (undocumented)
    ///   - [`is_truncated(Option<bool>)`](crate::operation::list_parts::ListPartsOutput::is_truncated): (undocumented)
    ///   - [`key(Option<String>)`](crate::operation::list_parts::ListPartsOutput::key): (undocumented)
    ///   - [`max_parts(Option<i32>)`](crate::operation::list_parts::ListPartsOutput::max_parts): (undocumented)
    ///   - [`next_part_number_marker(Option<i32>)`](crate::operation::list_parts::ListPartsOutput::next_part_number_marker): (undocumented)
    ///   - [`owner(Option<Owner>)`](crate::operation::list_parts::ListPartsOutput::owner): (undocumented)
    ///   - [`part(Option<Vec::<Part>>)`](crate::operation::list_parts::ListPartsOutput::part): (undocumented)
    ///   - [`part_number_marker(Option<i32>)`](crate::operation::list_parts::ListPartsOutput::part_number_marker): (undocumented)
    ///   - [`storage_class(Option<String>)`](crate::operation::list_parts::ListPartsOutput::storage_class): (undocumented)
    ///   - [`upload_id(Option<String>)`](crate::operation::list_parts::ListPartsOutput::upload_id): (undocumented)
                            /// - On failure, responds with [`SdkError<ListPartsError>`](crate::operation::list_parts::ListPartsError)
    pub fn list_parts(&self) -> crate::operation::list_parts::builders::ListPartsFluentBuilder {
                                crate::operation::list_parts::builders::ListPartsFluentBuilder::new(self.handle.clone())
                            }
}

